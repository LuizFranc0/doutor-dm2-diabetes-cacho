{"version":3,"file":"static/js/702.13201bfa.chunk.js","mappings":"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","sources":["components/ContentBlock/index.tsx","components/ContentBlock/styles.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Col, Modal, Button as AntButton, Radio, Input, Form } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\n\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n  isVideo = false,\r\n}: ContentBlockProps) => {\r\n  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\r\n  const [formValues, setFormValues] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768); // Define um limite para dispositivos móveis\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize(); // Verifica a largura ao carregar a página\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize); // Limpa o event listener\r\n  }, []);\r\n\r\n  const handleButtonClick = (title: string) => {\r\n    if (title === \"Contato\" || title === \"Entrar em contato\") {\r\n      setIsModalVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    const { nome, tempoDiabetes } = formValues;\r\n\r\n    const tempo = tempoDiabetes === \"menos1\"\r\n      ? \"menos de 1 ano\"\r\n      : tempoDiabetes === \"entre1e2\"\r\n        ? \"entre 1 e 2 anos\"\r\n        : tempoDiabetes === \"mais5\"\r\n          ? \"mais de 5 anos\"\r\n          : \"mais de 10 anos\";\r\n\r\n    const whatsappUrl = `https://wa.me/5528999350204?text=Olá!%20Sou%20${nome},%20tenho%20diabetes%20${tempo},%20gostaria%20de%20conhecer%20mais%20sobre%20o%20tratamento.`;\r\n    window.open(whatsappUrl, \"_blank\");\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleFormChange = (changedValues: any) => {\r\n    setFormValues((prev: any) => ({ ...prev, ...changedValues }));\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={isVideo ? 10 : 12} md={11} sm={12} xs={24}>\r\n            <SvgIcon\r\n              isVideo={isVideo}\r\n              src={icon}\r\n              width={isMobile ? \"350px\" : \"100%\"}\r\n              height=\"100%\"\r\n            />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map((item: any, idx: number) => (\r\n                      <Button\r\n                        key={idx}\r\n                        color={item.color}\r\n                        onClick={() => handleButtonClick(item.title)}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    ))}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                section && (\r\n                  <h5\r\n                    style={{\r\n                      fontSize: \"2rem\",\r\n                      color: \"#F99D36\",\r\n                    }}\r\n                  >\r\n                    Venha descobrir como podemos ajudar você também!\r\n                  </h5>\r\n                )\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n\r\n      <Modal\r\n        style={{\r\n          borderRadius: \"16px\",\r\n          boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n        }}\r\n        title={\r\n          <h1\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n              color: \"#F99D36\",\r\n              textAlign: \"center\",\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            Entrar em contato\r\n          </h1>\r\n        }\r\n        open={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <AntButton key=\"cancel\" onClick={handleCancel} style={{ borderRadius: \"8px\" }}>\r\n            Cancelar\r\n          </AntButton>,\r\n          <AntButton\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            onClick={handleOk}\r\n            style={{\r\n              backgroundColor: \"#1D71B8\",\r\n              borderColor: \"#1D71B8\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            Enviar\r\n          </AntButton>,\r\n        ]}\r\n        bodyStyle={{\r\n          borderRadius: \"16px\",\r\n          padding: \"24px\",\r\n          backgroundColor: \"#FAFAFA\",\r\n        }}\r\n        centered\r\n      >\r\n        <Form\r\n          onValuesChange={(_, values) => handleFormChange(values)}\r\n          layout=\"vertical\"\r\n          style={{ gap: \"16px\" }}\r\n        >\r\n          <Form.Item\r\n            label={\r\n              <span style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#333\" }}>\r\n                Nome\r\n              </span>\r\n            }\r\n            name=\"nome\"\r\n            rules={[{ required: true, message: \"Por favor, insira seu nome.\" }]}\r\n          >\r\n            <Input\r\n              placeholder=\"Digite seu nome\"\r\n              style={{\r\n                borderRadius: \"8px\",\r\n                borderColor: \"#E0E0E0\",\r\n                padding: \"12px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <span style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#333\" }}>\r\n                Você tem diabetes tipo 2?\r\n              </span>\r\n            }\r\n            name=\"diabetesTipo2\"\r\n            rules={[{ required: true, message: \"Por favor, selecione uma opção.\" }]}\r\n          >\r\n            <Radio.Group\r\n              style={{\r\n                display: \"flex\",\r\n                gap: \"16px\",\r\n              }}\r\n            >\r\n              <Radio value=\"sim\">Sim</Radio>\r\n              <Radio value=\"nao\">Não</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <span style={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"#333\" }}>\r\n                Há quanto tempo você sofre com diabetes?\r\n              </span>\r\n            }\r\n            name=\"tempoDiabetes\"\r\n            rules={[{ required: true, message: \"Por favor, selecione uma opção.\" }]}\r\n          >\r\n            <Radio.Group\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                gap: \"16px\",\r\n              }}\r\n            >\r\n              <Radio value=\"menos1\">Menos de 1 ano</Radio>\r\n              <Radio value=\"entre1e2\">Entre 1 e 2 anos</Radio>\r\n              <Radio value=\"mais5\">Mais de 5 anos</Radio>\r\n              <Radio value=\"mais10\">Mais de 10 anos</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 3rem 0 3.5rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n"],"names":["withTranslation","_ref","icon","title","content","section","button","t","id","direction","isVideo","isMobile","setIsMobile","useState","isModalVisible","setIsModalVisible","formValues","setFormValues","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","handleCancel","_jsxs","ContentSection","children","_jsx","Fade","triggerOnce","StyledRow","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","ContentWrapper","Content","ButtonWrapper","map","item","idx","Button","color","onClick","handleButtonClick","style","fontSize","Modal","borderRadius","boxShadow","fontWeight","textAlign","marginBottom","open","onCancel","footer","AntButton","type","handleOk","nome","tempoDiabetes","whatsappUrl","backgroundColor","borderColor","bodyStyle","padding","centered","Form","onValuesChange","_","values","handleFormChange","changedValues","prev","layout","gap","Item","label","name","rules","required","message","Input","placeholder","Radio","display","value","flexWrap","styled","Row"],"sourceRoot":""}